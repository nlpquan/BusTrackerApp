// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Repository;

#nullable disable

namespace BusTrackerBackend.Migrations
{
    [DbContext(typeof(RepositoryContext))]
    partial class RepositoryContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.2")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Entities.Models.Bus", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BusId");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Model")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("PlateNumber")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.ToTable("Buses");

                    b.HasData(
                        new
                        {
                            Id = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Capacity = 50,
                            IsActive = true,
                            Model = "Toyota",
                            PlateNumber = "FB23CA"
                        },
                        new
                        {
                            Id = new Guid("3d490a70-94ce-4d15-9494-5248280c2ce3"),
                            Capacity = 40,
                            IsActive = false,
                            Model = "Hyundai",
                            PlateNumber = "FB123"
                        });
                });

            modelBuilder.Entity("Entities.Models.BusLocation", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("LocationId");

                    b.Property<Guid>("BusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<DateTime>("Timestamp")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("BusId")
                        .IsUnique();

                    b.ToTable("BusLocations");

                    b.HasData(
                        new
                        {
                            Id = new Guid("d8c7b6a5-9e8d-1234-5678-90abcdef1234"),
                            BusId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            Latitude = 40.730609999999999,
                            Longitude = -73.935242000000002,
                            Timestamp = new DateTime(2024, 10, 27, 10, 0, 0, 0, DateTimeKind.Utc)
                        });
                });

            modelBuilder.Entity("Entities.Models.BusRoute", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("RouteId");

                    b.Property<Guid?>("BusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EndPoint")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.Property<string>("StartPoint")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.ToTable("BusRoutes");

                    b.HasData(
                        new
                        {
                            Id = new Guid("f4e3d2c1-b6a5-789a-9012-3456789abcd1"),
                            EndPoint = "Central Park",
                            Name = "Downtown Express",
                            StartPoint = "Downtown Station"
                        });
                });

            modelBuilder.Entity("Entities.Models.BusSchedule", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("ScheduleId");

                    b.Property<DateTime>("ArrivalTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("BusId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("DepartureTime")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("RouteId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("BusId");

                    b.HasIndex("RouteId");

                    b.ToTable("BusSchedules");

                    b.HasData(
                        new
                        {
                            Id = new Guid("e7d6c5b4-a3b2-567a-9012-3456789abcd2"),
                            ArrivalTime = new DateTime(2024, 10, 27, 12, 0, 0, 0, DateTimeKind.Utc),
                            BusId = new Guid("c9d4c053-49b6-410c-bc78-2d54a9991870"),
                            DepartureTime = new DateTime(2024, 10, 27, 11, 0, 0, 0, DateTimeKind.Utc),
                            RouteId = new Guid("f4e3d2c1-b6a5-789a-9012-3456789abcd1")
                        });
                });

            modelBuilder.Entity("Entities.Models.BusStop", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasColumnName("BusStopId");

                    b.Property<Guid?>("BusRouteId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<double>("Latitude")
                        .HasColumnType("float");

                    b.Property<double>("Longitude")
                        .HasColumnType("float");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(60)
                        .HasColumnType("nvarchar(60)");

                    b.HasKey("Id");

                    b.HasIndex("BusRouteId");

                    b.ToTable("BusStops");

                    b.HasData(
                        new
                        {
                            Id = new Guid("a1a9b2c3-d4e5-678f-9012-3456789abcde"),
                            Latitude = 40.712775999999998,
                            Longitude = -74.005973999999995,
                            Name = "Downtown Station"
                        },
                        new
                        {
                            Id = new Guid("b2b9c2d3-e4f5-678a-9012-3456789abcdf"),
                            Latitude = 40.785091000000001,
                            Longitude = -73.968284999999995,
                            Name = "Central Park"
                        });
                });

            modelBuilder.Entity("Entities.Models.BusLocation", b =>
                {
                    b.HasOne("Entities.Models.Bus", "Bus")
                        .WithOne("Location")
                        .HasForeignKey("Entities.Models.BusLocation", "BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");
                });

            modelBuilder.Entity("Entities.Models.BusRoute", b =>
                {
                    b.HasOne("Entities.Models.Bus", null)
                        .WithMany("Routes")
                        .HasForeignKey("BusId");
                });

            modelBuilder.Entity("Entities.Models.BusSchedule", b =>
                {
                    b.HasOne("Entities.Models.Bus", "Bus")
                        .WithMany()
                        .HasForeignKey("BusId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Entities.Models.BusRoute", "Route")
                        .WithMany()
                        .HasForeignKey("RouteId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Bus");

                    b.Navigation("Route");
                });

            modelBuilder.Entity("Entities.Models.BusStop", b =>
                {
                    b.HasOne("Entities.Models.BusRoute", null)
                        .WithMany("Stops")
                        .HasForeignKey("BusRouteId");
                });

            modelBuilder.Entity("Entities.Models.Bus", b =>
                {
                    b.Navigation("Location");

                    b.Navigation("Routes");
                });

            modelBuilder.Entity("Entities.Models.BusRoute", b =>
                {
                    b.Navigation("Stops");
                });
#pragma warning restore 612, 618
        }
    }
}
